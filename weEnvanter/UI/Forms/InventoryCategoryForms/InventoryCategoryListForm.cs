using DevExpress.XtraEditors;
using System;
using System.Windows.Forms;
using weEnvanter.Business.Services.Interfaces;
using weEnvanter.Core.Helpers;
using weEnvanter.Domain.Entities;
using weEnvanter.Domain.Enums;
using DevExpress.XtraBars.ToastNotifications;
using static weEnvanter.Core.Helpers.ToastNotificationHelper;
using weEnvanter.UI.Forms.InventoryForms;
using Microsoft.Extensions.DependencyInjection;

namespace weEnvanter.UI.Forms.InventoryCategoryForms
{
    public partial class InventoryCategoryListForm : DevExpress.XtraEditors.XtraForm
    {
        private readonly IInventoryCategoryService _inventoryCategoryService;
        private readonly IInventoryService _inventoryService;
        private readonly ToastNotificationsManager _toastNotificationsManager;

        public InventoryCategoryListForm()
        {
            InitializeComponent();
            _inventoryCategoryService = Program.ServiceProvider.GetRequiredService<IInventoryCategoryService>();
            _inventoryService = Program.ServiceProvider.GetRequiredService<IInventoryService>();

            // Toast Notification Manager'ı başlat
            _toastNotificationsManager = ToastNotificationHelper.CreateManager(components);

            // This line of code is generated by Data Source Configuration Wizard
            pLinqServerModeSource1.Source = new weEnvanter.Data.WeEnvanterDbContext().InventoryCategories;
            GridControlHelper.SetGridViewSettings(gridView_InventoryCategories);
            BarManagerHelper.SetBarManagerSettings(barManager1);
        }

        private void btn_AddInventoryCategory_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                using (var addCategoryForm = new AddOrEditInventoryCategoryForm(_inventoryCategoryService, OperationType.Add))
                {
                    if (addCategoryForm.ShowDialog() == DialogResult.OK)
                    {
                        pLinqServerModeSource1.Source = new weEnvanter.Data.WeEnvanterDbContext().InventoryCategories;
                        pLinqServerModeSource1.Reload();
                        _toastNotificationsManager.ShowSuccess("Kategori başarıyla eklendi.");
                    }
                }
            }
            catch (Exception ex)
            {
                _toastNotificationsManager.ShowError("Kategori eklenirken bir hata oluştu.");
            }
        }

        private void btn_RefreshDataSource_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                Cursor = Cursors.WaitCursor;
                pLinqServerModeSource1.Source = new weEnvanter.Data.WeEnvanterDbContext().InventoryCategories;
                pLinqServerModeSource1.Reload();
                _toastNotificationsManager.ShowSuccess("Veriler başarıyla yenilendi.");
            }
            catch (Exception ex)
            {
                _toastNotificationsManager.ShowError("Veriler yenilenirken bir hata oluştu.");
            }
            finally
            {
                Cursor = Cursors.Default;
            }
        }

        private void btn_ExportPDF_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Core.Helpers.ExportHelper.ExportToPdf(gridControl_InventoryCategories, "weEnvanter_Demirbaş_Kategorileri");
        }

        private void btn_ExportXLSX_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Core.Helpers.ExportHelper.ExportToExcel(gridControl_InventoryCategories, "weEnvanter_Demirbaş_Kategorileri");
        }

        private void bar_EditInventoryCategory_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            var selectedRow = gridView_InventoryCategories.GetFocusedRow() as InventoryCategory;
            if (selectedRow != null)
            {
                try
                {
                    using (var editForm = new AddOrEditInventoryCategoryForm(_inventoryCategoryService, OperationType.Update, selectedRow.Id))
                    {
                        if (editForm.ShowDialog() == DialogResult.OK)
                        {
                            pLinqServerModeSource1.Source = new weEnvanter.Data.WeEnvanterDbContext().InventoryCategories;
                            pLinqServerModeSource1.Reload();
                            _toastNotificationsManager.ShowSuccess("Kategori başarıyla güncellendi.");
                        }
                    }
                }
                catch (Exception ex)
                {
                    _toastNotificationsManager.ShowError("Kategori güncellenirken bir hata oluştu.");
                }
            }
        }

        private async void bar_DeleteInventoryCategory_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            var selectedRow = gridView_InventoryCategories.GetFocusedRow() as InventoryCategory;
            if (selectedRow != null)
            {
                try
                {
                    bool canBeDeleted = await _inventoryCategoryService.CanBeDeletedAsync(selectedRow.Id);
                    if (!canBeDeleted)
                    {
                        _toastNotificationsManager.ShowWarning("Bu kategori silinemez. Bu kategoriye ait demirbaşlar bulunmaktadır.");
                        return;
                    }

                    if (XtraMessageBox.Show("Seçili kategoriyi silmek istediğinize emin misiniz?", "Silme Onayı",
                        MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                    {
                        await _inventoryCategoryService.DeleteAsync(selectedRow.Id);
                        pLinqServerModeSource1.Source = new weEnvanter.Data.WeEnvanterDbContext().InventoryCategories;
                        pLinqServerModeSource1.Reload();
                        _toastNotificationsManager.ShowSuccess("Kategori başarıyla silindi.");
                    }
                }
                catch (Exception ex)
                {
                    _toastNotificationsManager.ShowError("Silme işlemi sırasında bir hata oluştu.");
                }
            }
        }

        private void bar_ShowRelationalInventoryList_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            var selectedRow = gridView_InventoryCategories.GetFocusedRow() as InventoryCategory;
            if (selectedRow != null)
            {
                try
                {
                    using (var inventoryListForm = new InventoryListForm(_inventoryService))
                    {
                        // TODO: InventoryListForm'a FilterByCategory metodu eklenecek
                        //inventoryListForm.FilterByCategory(selectedRow.Id);
                        inventoryListForm.ShowDialog();
                    }
                }
                catch (Exception ex)
                {
                    _toastNotificationsManager.ShowError("Demirbaş listesi açılırken bir hata oluştu.");
                }
            }
        }

        private void gridView_InventoryCategories_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            if (e.Button == MouseButtons.Right)
            {
                popupMenu1.ShowPopup(Cursor.Position);
            }
        }
    }
}