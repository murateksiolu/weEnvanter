using DevExpress.XtraBars.ToastNotifications;
using DevExpress.XtraEditors;
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Windows.Forms;
using weEnvanter.Business.Services.Interfaces;
using weEnvanter.Core.Helpers;
using weEnvanter.Domain.Entities;
using weEnvanter.Domain.Enums;
using weEnvanter.UI.Forms.EmployeeForms;
using static weEnvanter.Core.Helpers.ToastNotificationHelper;

namespace weEnvanter.UI.Forms.DepartmentForms
{
    public partial class DepartmentListForm : DevExpress.XtraEditors.XtraForm
    {
        private readonly IDepartmentService _departmentService;
        private readonly IEmployeeService _employeeService;
        private readonly ToastNotificationsManager _toastNotificationsManager;

        public DepartmentListForm()
        {
            InitializeComponent();
            _departmentService = Program.ServiceProvider.GetRequiredService<IDepartmentService>();
            _employeeService = Program.ServiceProvider.GetRequiredService<IEmployeeService>();

            // Toast Notification Manager'ı başlat
            _toastNotificationsManager = ToastNotificationHelper.CreateManager(components);

            // This line of code is generated by Data Source Configuration Wizard
            pLinqServerModeSource1.Source = new weEnvanter.Data.WeEnvanterDbContext().Departments;
            GridControlHelper.SetGridViewSettings(gridView_Departments);
            BarManagerHelper.SetBarManagerSettings(barManager1);
        }

        private void gridView_Departments_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            if (e.Button ==  MouseButtons.Right)
            {
                popupMenu1.ShowPopup(Cursor.Position);
            }
        }

        private void btn_AddNewDepartment_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                using (var addDepartmentForm = new AddOrEditDepartmentForm(_departmentService, OperationType.Add))
                {
                    if (addDepartmentForm.ShowDialog() == DialogResult.OK)
                    {
                        pLinqServerModeSource1.Source = new weEnvanter.Data.WeEnvanterDbContext().Departments;
                        pLinqServerModeSource1.Reload();
                        _toastNotificationsManager.ShowSuccess("Departman başarıyla eklendi.");
                    }
                }
            }
            catch (Exception ex)
            {
                _toastNotificationsManager.ShowError("Departman eklenirken bir hata oluştu.");
            }
        }

        private void btn_RefreshDataSource_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                Cursor = Cursors.WaitCursor;
                pLinqServerModeSource1.Source = new weEnvanter.Data.WeEnvanterDbContext().Departments;
                pLinqServerModeSource1.Reload();
                _toastNotificationsManager.ShowSuccess("Veriler başarıyla yenilendi.");
            }
            catch (Exception ex)
            {
                _toastNotificationsManager.ShowError("Veriler yenilenirken bir hata oluştu.");
            }
            finally
            {
                Cursor = Cursors.Default;
            }
        }

        private void btn_ExportPDF_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Core.Helpers.ExportHelper.ExportToPdf(gridControl_Departments, "weEnvanter_Departmanlar");
        }

        private void btn_ExportXLSX_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Core.Helpers.ExportHelper.ExportToExcel(gridControl_Departments, "weEnvanter_Departmanlar");
        }

        private void bar_EditDepartment_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            var selectedRow = gridView_Departments.GetFocusedRow() as Department;
            if (selectedRow != null)
            {
                try
                {
                    using (var editForm = new AddOrEditDepartmentForm(_departmentService, OperationType.Update, selectedRow.Id))
                    {
                        if (editForm.ShowDialog() == DialogResult.OK)
                        {
                            pLinqServerModeSource1.Source = new weEnvanter.Data.WeEnvanterDbContext().Departments;
                            pLinqServerModeSource1.Reload();
                            _toastNotificationsManager.ShowSuccess("Departman başarıyla güncellendi.");
                        }
                    }
                }
                catch (Exception ex)
                {
                    _toastNotificationsManager.ShowError("Departman güncellenirken bir hata oluştu.");
                }
            }
        }

        private async void bar_Delete_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            var selectedRow = gridView_Departments.GetFocusedRow() as Department;
            if (selectedRow != null)
            {
                try
                {
                    bool canBeDeleted = await _departmentService.CanBeDeletedAsync(selectedRow.Id);
                    if (!canBeDeleted)
                    {
                        _toastNotificationsManager.ShowWarning("Bu departman silinemez. Aktif çalışanları olabilir.");
                        return;
                    }

                    if (XtraMessageBox.Show("Seçili departmanı silmek istediğinize emin misiniz?", "Silme Onayı",
                        MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                    {
                        await _departmentService.DeleteAsync(selectedRow.Id);
                        pLinqServerModeSource1.Source = new weEnvanter.Data.WeEnvanterDbContext().Departments;
                        pLinqServerModeSource1.Reload();
                        _toastNotificationsManager.ShowSuccess("Departman başarıyla silindi.");
                    }
                }
                catch (Exception ex)
                {
                    _toastNotificationsManager.ShowError("Silme işlemi sırasında bir hata oluştu.");
                }
            }
        }

        private void bar_ShowEmployee_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            var selectedRow = gridView_Departments.GetFocusedRow() as Department;
            if (selectedRow != null)
            {
                try
                {
                    using (var employeeListForm = new EmployeeListForm())
                    {
                        employeeListForm.FilterByDepartment(selectedRow.Id);
                        employeeListForm.ShowDialog();
                    }
                }
                catch (Exception ex)
                {
                    _toastNotificationsManager.ShowError("Çalışan listesi açılırken bir hata oluştu.");
                }
            }
        }
    }
}